'use strict';(function(){const indexCfg={cache:true};indexCfg.doc={id:'id',field:['title','content'],store:['title','href'],};const index=FlexSearch.create('balance',indexCfg);window.bookSearchIndex=index;index.add({'id':0,'href':'/reachy-docs/docs/getting-started/','title':"Getting Started",'content':"Getting Started You just received your Reachy and you want to start using it? You are in the right place!\nThe next sections will guide you in the steps required before turning your robot on. We make a great deal of efforts to make this process as simple and quick as possible. Yet, there are still a few steps to follow which are particularly important.\nSo, grab a cup of coffee (or anything else you like) and let's do it. It should take about TODO hours.\n First, you will see how to assemble the different parts of Reachy together. Then, you will connect to your robot. You will launch its first behavior!  "});index.add({'id':1,'href':'/reachy-docs/docs/getting-started/assemble-your-reachy/','title':"Assemble Your Reachy",'content':"Assemble your Reachy "});index.add({'id':2,'href':'/reachy-docs/docs/getting-started/connect-to-your-robot/','title':"Connect to Your Robot",'content':"Connect to your robot Everything is already installed ðŸŽ‰ Reachy comes with a Raspberry-Pi 4 dedicated to its control. When you receive, your Reachy, the board is pre-installed with all required softwares. So, you don't have to install anything on your computer.\nThis section is meant to give you a bit more information on how things are actually working. First, you can find the Raspberry-Pi inside the trunk of the robot, as shown on this picture:\nTODO\nThen, if you want to update or re-install the system, we recommend you to rewrite the whole image. You can use etcher to burn the ISO. You will need a SD-card with at least a 16Go capacity. You can find the latest ISO here.\nBackup\nMake sure to save and copy your work as it will be lost during the re-writing!\n The image is based on the Raspbian Buster OS (desktop version). We then installed our own software, mainly a few Python packages.\nInstall on your own machine\nWe provide a pre-install Raspberry-Pi to ensure that all Reachy are shipped ready to be used and with the same configuration. Yet, if you want to use your own computer to control Reachy, or if you want to customize the Raspbian image it is possible. It is a more complex approach and requires knowledge on development environment. The whole process will soon be described in its own section.\n Connect to your Reachy What is left to configure is how you want to access your Reachy. There are a few options. You will present the most common below.\nWork directly on the robot You can directly plug a keyboard, mouse and display on the back of robot and you are good to go.\nLogin access\nThe robot comes with the default login: pi and a default password: reachy.\n TODO: image\nYou will have access to the Raspbian GUI where you will be able to configure everything you need (WiFi, ssh access, login, etc). Please, refer to the official Raspberry-Pi documentation for more information.\nAccess it via the network You can also work from your own computer and access the robot remotely. To do so, you will first need to connect the robot to your network.\nIf you already know how to connect a Raspberry-Pi, you can follow your usual procedure. The only modification from a \u0026ldquo;vanilla\u0026rdquo; Raspbian is the hostname:Â reachy and the default password:Â reachy.\nLogin access\nThe robot comes with the default login: pi and a default password: reachy. Make sure to change the password if you enable remote access! Or even better, only connect using ssh key. The hostname is reachy.\n To connect to your robot, you will need to either:\n know its IP address on your network (see with your FAI or IT to get the information) use the mDNS protocol and access the robot via its hostname  More information is accessible on the Raspberry-Pi official documentation.\nUsing the IP\nssh pi@192.168.0.42 Replace 192.168.0.42 with the IP you found.\n Using ZeroConf\nssh pi@reachy.local    Note: for information on how to use ssh on your own machine, please refer to the Raspberry-Pi documentation.\nUsing Ethernet You can connect your Reachy using the ethernet socket on the back of the robot. Most configuration should work without any additional setup.\nTODO: image\nConfiguring the WiFi Configuring the WiFi on a Raspberry-Pi for the first time can be a bit tricky. Here, again we strongly recommend to follow the official guide.\nThe simplest way, by far, is to first directly connect to the board via a keyboard and display (see this section) and use the GUI to configure the WiFi.\nYou can also first connect to the board via Ethernet and configure the WiFi via ssh in command line (see this documentation).\nFinally, if none of the options are available for you, you will need to open the robot and remove the SD-card to connect it to your computer and write the wpa_supplicant.conf file.\n"});index.add({'id':3,'href':'/reachy-docs/docs/getting-started/faq/','title':"FAQ",'content':"FAQ "});index.add({'id':4,'href':'/reachy-docs/docs/program-your-robot/','title':"Program your robot",'content':"Program your robot This section will guide you in how to control your robot. It will describe the most basic features needed to make your robot move and interact with its environment.\nThe robot API is written in Python and version above 3.6 are supported. It is pre-installed on the Raspberry-Pi of the robot. The SDK has been designed to be accessible and easy-to-use. Yet, as it is fully open-source (available here), you can dig inside and adapt to your specifics needs (contributions are welcome!).\nIn this section, we will cover:\n how to instantiate your robot and define the parts you are using, make the arm moves (motor by motor or using kinematics), recording and replay motions, make the head look somewhere specific, and run pre-defined behaviors.  The full Python's API is also accessible here.\nThe more advanced topics (like using Unity for instance) will be discussed in their own section.\n"});index.add({'id':5,'href':'/reachy-docs/docs/program-your-robot/instantiate-your-robot/','title':"Instantiate Your Robot",'content':"Instantiate your robot The first step is to \u0026ldquo;instantiate\u0026rdquo; your robot. What we mean here, is that we will look for the different parts of your robot (connected via USBs on the Raspberry-Pi). We will identify them and check if all modules are connected.\nWe will also launch the synchronisation between the Raspberry-Pi and the different parts of your robot. The sensors value read from the robot will automatically be updated in your Python object. Similarly you will send command to your Robot effector hardware by simply affecting Python variables.\nWhich parts are present on my Reachy? Reachy is built around the concept of modular parts. A Reachy can be composed of:\n a trunk (with all electronics and power supply) one arm (left or right) or both with different kind of end-effectors a head    So, to instantiate your robot we have to specify which parts you want to use. If you are using a \u0026ldquo;full\u0026rdquo; Reachy, ie with both arm equipped with force gripper, and a head; you can run the following Python code on your Raspberry-Pi:\nfrom reachy import Reachy, parts reachy = Reachy( left_arm=LeftArm( luos_port=\u0026#39;/dev/ttyUSB*\u0026#39;, hand=\u0026#39;force_gripper\u0026#39;, ), right_arm=RightArm( luos_port=\u0026#39;/dev/ttyUSB*\u0026#39;, hand=\u0026#39;force_gripper\u0026#39;, ), head=Head( camera_id=0, luos_port=\u0026#39;/dev/ttyUSB*\u0026#39;, ), ) And if you have only the right arm and the head:\nfrom reachy import Reachy, parts reachy = Reachy( right_arm=RightArm( luos_port=\u0026#39;/dev/ttyUSB*\u0026#39;, hand=\u0026#39;force_gripper\u0026#39;, ), head=Head( camera_id=0, luos_port=\u0026#39;/dev/ttyUSB*\u0026#39;, ), ) If you don't see any error, good news, you are now connected to your Robot and all the parts have been found! ðŸŽ‰ ðŸŽ‰ ðŸŽ‰\nGoing deeper: the arm part Let's dive a bit into the details of the code above.\nfrom reachy import Reachy, parts Our API is available through the reachy Python module. This is the main entry point for controlling your robot.\nright_arm=RightArm( luos_port=\u0026#39;/dev/ttyUSB*\u0026#39;, hand=\u0026#39;force_gripper\u0026#39;, ), Here, we specify that we want to add a Right Arm part and it should be found on a USB serial port of type \u0026ldquo;/dev/ttyUSB*\u0026quot;. This is the standard name for the serial port on a Linux system. On other OS the name may differ (e.g. COM* on Windows).\nThen, we specify which types of hand are attached to the arm. In our cases we set it to \u0026ldquo;force_gripper\u0026rdquo;.\nGoing deeper: the head part head=Head( camera_id=0, luos_port=\u0026#39;/dev/ttyUSB*\u0026#39;, ), Similarly to the arm, we define the USB port on which we should find the part \u0026ldquo;/dev/ttyUSB*\u0026quot;. The _camera_id_ corresponds to the index of the camera. It will be used to open the video stream using the OpenCV library.\nLuos modules and gates (available through their Luos gate and USB-serial interface)\n"});index.add({'id':6,'href':'/reachy-docs/categories/','title':"Categories",'content':""});index.add({'id':7,'href':'/reachy-docs/docs/','title':"Docs",'content':""});index.add({'id':8,'href':'/reachy-docs/','title':"Introduction",'content':"Hello, I'm Reachy! Reachy is an open source interactive robot designed to explore real-world applications!\n  Reachy makes AI \u0026amp; robotics accessible to researchers, innovation professionals and creatives. It comes in different flavors to let you prototype and create your real-world interactive \u0026amp; service applications right away!\u2029This manual will guide you in all the steps to\n finish the hardware assembly of your robot, turn it on for the first time, start using of our playground environment, or program it yourself.  You will also find many use examples, specifications and detail implementations. If you are missing some information or want to go deeper and interact with other Reachy's user, don't hesitate to join the discussion on our forum!\n"});index.add({'id':9,'href':'/reachy-docs/tags/','title':"Tags",'content':""});})();